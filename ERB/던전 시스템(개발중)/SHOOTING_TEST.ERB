;슈팅겜 테스트.

@SHOOTING_TEST
;묘화방식
REDRAW 0

;시간
LOCAL:0 = 0
;총알번호.
LOCAL:1 = 0
;시작시간 정보
LOCAL:2 = 0
;종료시간 정보
LOCAL:3 = 0
;버틴시간 정보
LOCAL:4 = 0
;뿌릴 총알 개수
LOCAL:5 = 30


;맵 데이터 초기화.
FOR LOCAL:99, 0, 40
	FOR LOCAL:98, 0, 40
		TEST_SHOOTING_MAP:(LOCAL:99):(LOCAL:98) = 0
	NEXT
NEXT

;시작시간 정보 획득
LOCAL:2 = GETMILLISECOND()

;총알을 LOCAL:5개뿌린다...
FOR LOCAL:99, 0, LOCAL:5
	;총알의 X위치
	TEST_BULLET:(LOCAL:99):1 = RAND:35 +1
	;총알의 Y위치
	TEST_BULLET:(LOCAL:99):2 = RAND:35 +1
	;총알의 X속도
	TEST_BULLET:(LOCAL:99):3 = RAND:3 -1
	;총알의 Y속도
	TEST_BULLET:(LOCAL:99):4 = RAND:3 -1
NEXT

;주인공 배치
PLAYER_SHOOTING_TEST_DATA:1 = 20
PLAYER_SHOOTING_TEST_DATA:2 = 20
TEST_SHOOTING_MAP:(PLAYER_SHOOTING_TEST_DATA:1):(PLAYER_SHOOTING_TEST_DATA:2) == 999

$LOOP_SHOOTING_MAP
;시간이 증가한다.
LOCAL:0 ++
;현재시간
LOCAL:3 = GETMILLISECOND()
;버틴시간 계산	
LOCAL:4 = LOCAL:3 - LOCAL:2
IF LOCAL:5 < 100
	;총알이 늘어난다.
	LOCAL:5 ++ 
	;추가된 총알 정보설정
	;총알의 X위치
	TEST_BULLET:(LOCAL:99):1 = 1
	;총알의 Y위치
	TEST_BULLET:(LOCAL:99):2 = RAND(38)+1
	;총알의 X속도
	TEST_BULLET:(LOCAL:99):3 = RAND:3 -1
	;총알의 Y속도
	TEST_BULLET:(LOCAL:99):4 = RAND:3 -1
ENDIF

;주인공의 좌표에 총알이 있는지 체크한다. 만약 총알을 맞았다면 거기서 게임오버.
IF TEST_SHOOTING_MAP:(PLAYER_SHOOTING_TEST_DATA:1):(PLAYER_SHOOTING_TEST_DATA:2) > 0  && TEST_SHOOTING_MAP:(PLAYER_SHOOTING_TEST_DATA:1):(PLAYER_SHOOTING_TEST_DATA:2) != 999
	;종료시간 획득
	LOCAL:3 = GETMILLISECOND()
	;버틴시간 출력	
	LOCAL:4 = LOCAL:3 - LOCAL:2
	PRINTL
	CALL SETCOLOR_TORIKOMODE, "RED", 3
	PRINTFORMW 피츙~! (버틴시간 : {LOCAL:4/1000}.{LOCAL:4%1000}초)
	RESETCOLOR
	PRINTL
	;묘화방식 복구
	REDRAW 1
	RETURN 0
;안 죽었다면
ELSE
	CALL SETCOLOR_TORIKOMODE, "SKYBLUE", 3
	PRINTFORML 버틴시간 : {LOCAL:4/1000}.{LOCAL:4%1000}초
	RESETCOLOR
ENDIF

;그린다.
FOR LOCAL:99, 0, 40
	FOR LOCAL:98, 0, 40
		;벽이면 벽을 그리도록
		IF LOCAL:99 ==0 || LOCAL:99 == 39 || LOCAL:98 == 0 || LOCAL:98 == 39
			PRINT □
		;빈땅 그리기
		ELSEIF TEST_SHOOTING_MAP:(LOCAL:99):(LOCAL:98) == 0
			PRINT   
		;주인공 그리기 
		ELSEIF TEST_SHOOTING_MAP:(LOCAL:99):(LOCAL:98) == 999
			CALL SETCOLOR_TORIKOMODE, "RED", 3
			PRINTFORM 人
			RESETCOLOR
		;총알 그리기
		ELSEIF TEST_SHOOTING_MAP:(LOCAL:99):(LOCAL:98) > 0  
			;총알번호 획득
			LOCAL:1 = TEST_SHOOTING_MAP:(LOCAL:99):(LOCAL:98)
			;↙로 움직이는 총알이면
			IF TEST_BULLET:(LOCAL:1):3 == 1 && TEST_BULLET:(LOCAL:1):4 == -1
				PRINTFORM ↙ 
			;↖
			ELSEIF TEST_BULLET:(LOCAL:1):3 == -1 && TEST_BULLET:(LOCAL:1):4 == -1
				PRINTFORM ↖ 
			;↘
			ELSEIF TEST_BULLET:(LOCAL:1):3 == 1 && TEST_BULLET:(LOCAL:1):4 == 1
				PRINTFORM ↘ 
			;↗
			ELSEIF TEST_BULLET:(LOCAL:1):3 == -1 && TEST_BULLET:(LOCAL:1):4 == 1
				PRINTFORM ↗ 
			;↑
			ELSEIF TEST_BULLET:(LOCAL:1):3 == -1 && TEST_BULLET:(LOCAL:1):4 == 0
				PRINTFORM ↑
			;↓
			ELSEIF TEST_BULLET:(LOCAL:1):3 == +1 && TEST_BULLET:(LOCAL:1):4 == 0
				PRINTFORM ↓
			;→
			ELSEIF TEST_BULLET:(LOCAL:1):3 == 0 && TEST_BULLET:(LOCAL:1):4 == 1
				PRINTFORM →
			;←
			ELSEIF TEST_BULLET:(LOCAL:1):3 == 0 && TEST_BULLET:(LOCAL:1):4 == -1
				PRINTFORM ←
			ELSE
				PRINTFORM   
			ENDIF
		ENDIF
	NEXT
	PRINTL
NEXT

;총알의 궤적을 계산한다. 총알은 벽에서 바운드 되는 대각이동을 한다...고 가정한다.

;총알은 턴마다 이동한다...

;총알마다 계산한다.
FOR LOCAL:99, 0, LOCAL:5
	;현재 총알은 지우고
	TEST_SHOOTING_MAP:(TEST_BULLET:(LOCAL:99):1):(TEST_BULLET:(LOCAL:99):2) = 0
	;이동한 후
	TEST_BULLET:(LOCAL:99):1 += TEST_BULLET:(LOCAL:99):3
	TEST_BULLET:(LOCAL:99):2 += TEST_BULLET:(LOCAL:99):4

	;만약 총알이 벽에 닿았다면...튕긴다...
	;좌벽이나 우벽에 닿았다면.. X속도는 역전된다...
	SIF TEST_BULLET:(LOCAL:99):1 <= 0 || TEST_BULLET:(LOCAL:99):1 >= 39
		TEST_BULLET:(LOCAL:99):3 *= -1
	;상벽이나 하벽에 닿았다면.. X속도는 역전된다...
	SIF TEST_BULLET:(LOCAL:99):2 <= 0 || TEST_BULLET:(LOCAL:99):2 >= 39
		TEST_BULLET:(LOCAL:99):4 *= -1
	;총알번호를 저장한다...
	TEST_SHOOTING_MAP:(TEST_BULLET:(LOCAL:99):1):(TEST_BULLET:(LOCAL:99):2) = LOCAL:99
NEXT

TONEINPUT 50, 0, 0
IF RESULT > 0
	;유저 정보를 맵에서 지우고
	TEST_SHOOTING_MAP:(PLAYER_SHOOTING_TEST_DATA:1):(PLAYER_SHOOTING_TEST_DATA:2) = 0
	PRINTFORML {RESULT}
	SELECTCASE RESULT
		CASE 7
			PLAYER_SHOOTING_TEST_DATA:1 -= 1
			PLAYER_SHOOTING_TEST_DATA:2 -= 1
		CASE 8
			PLAYER_SHOOTING_TEST_DATA:1 -= 1
			PLAYER_SHOOTING_TEST_DATA:2 += 0
		CASE 9
			PLAYER_SHOOTING_TEST_DATA:1 -= 1
			PLAYER_SHOOTING_TEST_DATA:2 += 1
		CASE 4
			PLAYER_SHOOTING_TEST_DATA:1 += 0
			PLAYER_SHOOTING_TEST_DATA:2 -= 1
		CASE 5
			PLAYER_SHOOTING_TEST_DATA:1 += 0
			PLAYER_SHOOTING_TEST_DATA:2 += 0
		CASE 6
			PLAYER_SHOOTING_TEST_DATA:1 += 0
			PLAYER_SHOOTING_TEST_DATA:2 += 1
		CASE 1
			PLAYER_SHOOTING_TEST_DATA:1 += 1
			PLAYER_SHOOTING_TEST_DATA:2 -= 1
		CASE 2
			PLAYER_SHOOTING_TEST_DATA:1 += 1
			PLAYER_SHOOTING_TEST_DATA:2 += 0
		CASE 3
			PLAYER_SHOOTING_TEST_DATA:1 += 1
			PLAYER_SHOOTING_TEST_DATA:2 += 1
		CASE 0
			RETURN 0
	ENDSELECT
	;유저 정보를 맵에 입력한다.
	TEST_SHOOTING_MAP:(PLAYER_SHOOTING_TEST_DATA:1):(PLAYER_SHOOTING_TEST_DATA:2) = 999
ENDIF
;루프돌러 가라~
GOTO LOOP_SHOOTING_MAP

